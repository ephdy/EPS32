[1/11] Performing build step for 'bootloader'
[1/1] cd /home/ep_hdy/Code/ESP32/WS2812/build/bootloader/esp-idf/esptool_py && /home/ep_hdy/.espressif/python_env/idf5.2_py3.12_env/bin/python /home/ep_hdy/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/ep_hdy/Code/ESP32/WS2812/build/bootloader/bootloader.bin
Bootloader binary size 0x6860 bytes. 0x7a0 bytes (7%) free.
[2/11] No install step for 'bootloader'
[3/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/WIFI_STA.c.obj
[4/11] Completed 'bootloader'
[5/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/RMT_WS2812.c.obj
[6/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/WS2812.c.obj
[7/11] Linking C static library esp-idf/main/libmain.a
[8/11] Generating ld/sections.ld
[9/11] Linking CXX executable WS2812.elf
[10/11] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/ep_hdy/Code/ESP32/WS2812/build/WS2812.bin
[11/11] cd /home/ep_hdy/Code/ESP32/WS2812/build/esp-idf/esptool_py && /home/ep_hdy/.espressif/python_env/idf5.2_py3.12_env/bin/python /home/ep_hdy/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/ep_hdy/Code/ESP32/WS2812/build/partition_table/partition-table.bin /home/ep_hdy/Code/ESP32/WS2812/build/WS2812.bin
WS2812.bin binary size 0xc47b0 bytes. Smallest app partition is 0x100000 bytes. 0x3b850 bytes (23%) free.
